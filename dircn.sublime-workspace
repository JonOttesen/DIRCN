{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"mask",
				"mask_generator"
			],
			[
				"image",
				"image_index"
			],
			[
				"se",
				"sens_maps"
			],
			[
				"down",
				"downsample_layer"
			],
			[
				"intera",
				"internal_dense"
			],
			[
				"use",
				"use_maxouts"
			],
			[
				"max",
				"use_maxouts"
			],
			[
				"com",
				"comp_resxunet"
			],
			[
				"complex",
				"complex_conj"
			],
			[
				"coil",
				"coils_n_index"
			],
			[
				"index",
				"_index_to_file_and_image"
			],
			[
				"data",
				"datasetcontainer"
			],
			[
				"conv",
				"conv1"
			],
			[
				"round",
				"rounding_mode="
			],
			[
				"accm",
				"accm_index"
			],
			[
				"inde",
				"indexes"
			],
			[
				"masked",
				"masked_kspace"
			],
			[
				"loss",
				"loss_function"
			],
			[
				"init",
				"init_mask"
			],
			[
				"are",
				"area_threshold"
			],
			[
				"back",
				"background_mean"
			],
			[
				"thres",
				"thresh"
			],
			[
				"in",
				"inbetween_mask"
			],
			[
				"co",
				"contour"
			],
			[
				"med",
				"median_filter"
			],
			[
				"lo",
				"loss_function"
			],
			[
				"img",
				"img_transforms"
			],
			[
				"mixu",
				"mixup_entry"
			],
			[
				"mixup",
				"mixup_entry"
			],
			[
				"con",
				"container"
			],
			[
				"sel",
				"select_slice"
			],
			[
				"coi",
				"coil_dict"
			],
			[
				"apply",
				"apply_transforms"
			],
			[
				"num",
				"num_low_freqs"
			],
			[
				"ent",
				"entries"
			],
			[
				"kspa",
				"kspace_pred"
			],
			[
				"model",
				"model_term"
			],
			[
				"view",
				"view_as_real"
			],
			[
				"vi",
				"view_as_complex"
			],
			[
				"kspace",
				"kspace_recon"
			],
			[
				"Mod",
				"ModuleList"
			],
			[
				"k_",
				"k_maps"
			],
			[
				"k",
				"kspace_pred"
			],
			[
				"mas",
				"masked_kspace"
			],
			[
				"mode",
				"models"
			],
			[
				"sens",
				"sense_repeats"
			],
			[
				"for",
				"forward"
			],
			[
				"squ",
				"squeeze_excitation"
			],
			[
				"insta",
				"instance_norm"
			],
			[
				"n_fea",
				"n_feats"
			],
			[
				"ke",
				"kernel_size"
			],
			[
				"n",
				"n_resgroups"
			],
			[
				"n_res",
				"n_resblocks"
			],
			[
				"model_",
				"model_term_expanded\tstatement"
			],
			[
				"beta",
				"beta_squared\tstatement"
			],
			[
				"acc",
				"acc_data"
			],
			[
				"phase",
				"phase_img"
			],
			[
				"data_sor",
				"data_sorted"
			],
			[
				"rand",
				"randint\tfunction"
			],
			[
				"float",
				"float32\tstatement"
			],
			[
				"middle",
				"middle_attention\tstatement"
			],
			[
				"i",
				"i_crop2\tstatement"
			],
			[
				"fft",
				"fft2c\tfunction"
			],
			[
				"comle",
				"complex_support\tstatement"
			],
			[
				"comple",
				"complex_support"
			],
			[
				"return",
				"return_max"
			],
			[
				"split",
				"split_1\tstatement"
			],
			[
				"add",
				"add_entry\tfunction"
			],
			[
				"V",
				"VarNetBlock\tclass"
			],
			[
				"normalie",
				"normalize_kspace\tmodule"
			],
			[
				"norm",
				"norm_dim\tstatement"
			],
			[
				"FL",
				"FLAIR_1\tstatement"
			],
			[
				"pat",
				"patient\tstatement"
			],
			[
				"Bat",
				"BatchNorm2d\tclass"
			],
			[
				"sense",
				"sense_maps\tstatement"
			],
			[
				"coil_",
				"coil_kspace\tstatement"
			],
			[
				"BiP",
				"BiFPN_layers\tparam"
			],
			[
				"cal",
				"calculate_sense\tfunction"
			],
			[
				"comp",
				"complex_img\tstatement"
			],
			[
				"crop",
				"crop_size\tparam"
			],
			[
				"tensor",
				"tensor_dtype\tstatement"
			],
			[
				"final",
				"final_bottle\tstatement"
			],
			[
				"out",
				"out_2\tstatement"
			],
			[
				"out_chan",
				"out_channel_norm\tstatement"
			],
			[
				"up",
				"up3\tstatement"
			],
			[
				"up3_chann",
				"up3_channel_norm\tstatement"
			],
			[
				"down2",
				"down2_basic\tstatement"
			],
			[
				"down1",
				"down1_norm\tstatement"
			],
			[
				"input",
				"input_conv\tstatement"
			],
			[
				"S",
				"Sequential\tclass"
			],
			[
				"do",
				"downsample\tstatement"
			],
			[
				"device",
				"device_ids\tstatement"
			],
			[
				"BiFPN",
				"BiFPN_layers\tparam"
			],
			[
				"Module",
				"ModuleList\tclass"
			],
			[
				"Insta",
				"InstanceNorm2d\tclass"
			],
			[
				"Model",
				"ModelContainer\tclass"
			],
			[
				"int",
				"int16\tmodule"
			],
			[
				"str",
				"start\tstatement"
			],
			[
				"m",
				"min_validation_loss\tstatement"
			],
			[
				"min_val",
				"min_validation_loss\tstatement"
			],
			[
				"min",
				"min_val_loss\tstatement"
			],
			[
				"val",
				"val_loss\tstatement"
			],
			[
				"n_",
				"n_repeats\tparam"
			],
			[
				"Basic",
				"BasicBlock\tclass"
			],
			[
				"basi",
				"basic_up1\tstatement"
			],
			[
				"new",
				"new_mbdown\tstatement"
			],
			[
				"u",
				"up_mbblocks\tstatement"
			],
			[
				"bloc",
				"block_args\tstatement"
			],
			[
				"dow",
				"down_block\tstatement"
			],
			[
				"block",
				"block_args\tstatement"
			],
			[
				"blc",
				"block_args\tstatement"
			],
			[
				"Modu",
				"ModuleList\tclass"
			],
			[
				"bl",
				"block_num\tstatement"
			],
			[
				"Ins",
				"InstanceNorm2d\tclass"
			],
			[
				"in_",
				"in_channels_efficient\tstatement"
			],
			[
				"bottle",
				"bottle_up3\tstatement"
			],
			[
				"bot",
				"bottle_up2\tstatement"
			],
			[
				"bott",
				"bottle_up1\tstatement"
			],
			[
				"I",
				"InstanceNorm2d\tclass"
			],
			[
				"get",
				"get_same_padding_conv2d\tfunction"
			],
			[
				"Bas",
				"BasicUpBlock\tclass"
			],
			[
				"basic",
				"basic_upblock\tmodule"
			],
			[
				"Maxp",
				"MaxPool2d\tclass"
			],
			[
				"id",
				"identity\tstatement"
			],
			[
				"Sq",
				"SqueezeExcitation\tclass"
			],
			[
				"dilation",
				"dilation=\tparam"
			],
			[
				"Conv",
				"Conv2d\tclass"
			],
			[
				"s",
				"squeeze_excitation\tmodule"
			]
		]
	},
	"buffers":
	[
		{
			"file": "train.py",
			"settings":
			{
				"buffer_size": 4183,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "dircn/preprocessing/__init__.py",
			"settings":
			{
				"buffer_size": 379,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					6,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAFABAAAAAAAAUQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUAEAAAAAAABQAQAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": "from"
					},
					"BAAAAFEBAAAAAAAAUgEAAAAAAAAAAAAAUgEAAAAAAABTAQAAAAAAAAAAAABTAQAAAAAAAFQBAAAAAAAAAAAAAFQBAAAAAAAAVQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUQEAAAAAAABRAQAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFUBAAAAAAAAVgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVQEAAAAAAABVAQAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"insert",
					{
						"characters": ".downsample"
					},
					"CwAAAFYBAAAAAAAAVwEAAAAAAAAAAAAAVwEAAAAAAABYAQAAAAAAAAAAAABYAQAAAAAAAFkBAAAAAAAAAAAAAFkBAAAAAAAAWgEAAAAAAAAAAAAAWgEAAAAAAABbAQAAAAAAAAAAAABbAQAAAAAAAFwBAAAAAAAAAAAAAFwBAAAAAAAAXQEAAAAAAAAAAAAAXQEAAAAAAABeAQAAAAAAAAAAAABeAQAAAAAAAF8BAAAAAAAAAAAAAF8BAAAAAAAAYAEAAAAAAAAAAAAAYAEAAAAAAABhAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVgEAAAAAAABWAQAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": "_fov"
					},
					"BAAAAGEBAAAAAAAAYgEAAAAAAAAAAAAAYgEAAAAAAABjAQAAAAAAAAAAAABjAQAAAAAAAGQBAAAAAAAAAAAAAGQBAAAAAAAAZQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYQEAAAAAAABhAQAAAAAAAAAAAAAAAPC/"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": " import"
					},
					"BwAAAGUBAAAAAAAAZgEAAAAAAAAAAAAAZgEAAAAAAABnAQAAAAAAAAAAAABnAQAAAAAAAGgBAAAAAAAAAAAAAGgBAAAAAAAAaQEAAAAAAAAAAAAAaQEAAAAAAABqAQAAAAAAAAAAAABqAQAAAAAAAGsBAAAAAAAAAAAAAGsBAAAAAAAAbAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZQEAAAAAAABlAQAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": " Do"
					},
					"AwAAAGwBAAAAAAAAbQEAAAAAAAAAAAAAbQEAAAAAAABuAQAAAAAAAAAAAABuAQAAAAAAAG8BAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbAEAAAAAAABsAQAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"insert_completion",
					{
						"completion": "downsample_fov",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "downsample_fov"
					},
					"AgAAAG0BAAAAAAAAbQEAAAAAAAACAAAARG9tAQAAAAAAAHsBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbwEAAAAAAABvAQAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"left_delete",
					null,
					"AQAAAG0BAAAAAAAAbQEAAAAAAAABAAAAZA",
					"AQAAAAAAAAABAAAAbgEAAAAAAABuAQAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": "D"
					},
					"AQAAAG0BAAAAAAAAbgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbQEAAAAAAABtAQAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					4,
					"left_delete",
					null,
					"BAAAAHoBAAAAAAAAegEAAAAAAAABAAAAdnkBAAAAAAAAeQEAAAAAAAABAAAAb3gBAAAAAAAAeAEAAAAAAAABAAAAZncBAAAAAAAAdwEAAAAAAAABAAAAXw",
					"AQAAAAAAAAABAAAAewEAAAAAAAB7AQAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": "FOV"
					},
					"AwAAAHcBAAAAAAAAeAEAAAAAAAAAAAAAeAEAAAAAAAB5AQAAAAAAAAAAAAB5AQAAAAAAAHoBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdwEAAAAAAAB3AQAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					1,
					"paste",
					null,
					"AgAAAG0BAAAAAAAAegEAAAAAAAAAAAAAegEAAAAAAAB6AQAAAAAAAA0AAABEb3duc2FtcGxlRk9W",
					"AQAAAAAAAAABAAAAbQEAAAAAAAB6AQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "dircn/models/dircn/dircn.py",
			"settings":
			{
				"buffer_size": 13463,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					6,
					1,
					"insert",
					{
						"characters": "D"
					},
					"AgAAAP4cAAAAAAAA/xwAAAAAAAAAAAAA/xwAAAAAAAD/HAAAAAAAAAoAAABDYXNjYWRlTmV0",
					"AQAAAAAAAAABAAAA/hwAAAAAAAAIHQAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": "IR"
					},
					"AgAAAP8cAAAAAAAAAB0AAAAAAAAAAAAAAB0AAAAAAAABHQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/xwAAAAAAAD/HAAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": "CN"
					},
					"AgAAAAEdAAAAAAAAAh0AAAAAAAAAAAAAAh0AAAAAAAADHQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAR0AAAAAAAABHQAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"paste",
					null,
					"BAAAAF8hAAAAAAAAbyEAAAAAAAAAAAAAbyEAAAAAAABvIQAAAAAAAAsAAAB1c2VfbWF4b3V0c1EhAAAAAAAAYSEAAAAAAAAAAAAAYSEAAAAAAABhIQAAAAAAAAsAAAB1c2VfbWF4b3V0cw",
					"AQAAAAAAAAACAAAAUSEAAAAAAABcIQAAAAAAAAAAAAAAAPC/XyEAAAAAAABqIQAAAAAAAAAAAAAAAPC/"
				],
				[
					53,
					1,
					"left_delete",
					null,
					"AQAAACIiAAAAAAAAIiIAAAAAAAAbAAAAICAgICAgICAgICAgICAgIG5vcm09bm9ybSwK",
					"AQAAAAAAAAABAAAAIiIAAAAAAAA9IgAAAAAAAAAAAAAAAPC/"
				],
				[
					66,
					1,
					"left_delete",
					null,
					"AQAAADkGAAAAAAAAOQYAAAAAAAAbAAAAICAgICAgICAgICAgICAgIG5vcm09bm9ybSwK",
					"AQAAAAAAAAABAAAAOQYAAAAAAABUBgAAAAAAAAAAAAAAAPC/"
				],
				[
					77,
					1,
					"left_delete",
					null,
					"AQAAAEQVAAAAAAAARBUAAAAAAAAXAAAAICAgICAgICAgICAgbm9ybT1ub3JtLAo",
					"AQAAAAAAAAABAAAARBUAAAAAAABbFQAAAAAAAAAAAAAAAPC/"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"json",
				"Pretty JSON: Format (Pretty Print) JSON"
			],
			[
				"prett",
				"Pretty JSON: Format (Pretty Print) JSON"
			],
			[
				"JSO",
				"Pretty JSON: Format (Pretty Print) JSON"
			],
			[
				"jso",
				"Pretty JSON: Format (Pretty Print) JSON"
			],
			[
				"lint",
				"SublimeLinter: Reload SublimeLinter and its Plugins"
			],
			[
				"pa",
				"Package Control: Advanced Install Package"
			],
			[
				"",
				"Preferences: Browse Packages"
			],
			[
				"Package Control: ",
				"Package Control: List Packages"
			],
			[
				"Prefere",
				"Preferences: Settings"
			],
			[
				"packa",
				"View Package File"
			],
			[
				"Pack",
				"Package Control: Advanced Install Package"
			],
			[
				"Install",
				"Install Package Control"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/jon/Documents/CRAI/DIRCN",
		"/home/jon/Documents/CRAI/DIRCN/dircn",
		"/home/jon/Documents/CRAI/DIRCN/dircn/models",
		"/home/jon/Documents/CRAI/DIRCN/dircn/preprocessing",
		"/home/jon/Documents/CRAI/DIRCN/dircn/trainer"
	],
	"file_history":
	[
		"/home/jon/Documents/CRAI/DIRCN/test.py",
		"/home/jon/Documents/CRAI/DIRCN/dircn/models/dircn/dircn.py",
		"/home/jon/Documents/CRAI/DIRCN/dircn/masks/subsample.py",
		"/home/jon/Documents/CRAI/DIRCN/dircn/preprocessing/__init__.py",
		"/home/jon/Documents/CRAI/DIRCN/dircn/preprocessing/apply_mask.py",
		"/home/jon/Documents/CRAI/DIRCN/train.py",
		"/home/jon/Documents/CRAI/DIRCN/dircn/models/dircn/squeeze_excitation.py",
		"/home/jon/Documents/CRAI/DIRCN/dircn.json",
		"/home/jon/Documents/CRAI/DIRCN/dircn/models/losses/FSSIM.py",
		"/home/jon/Documents/CRAI/DIRCN/dircn/dataset/datasetcontainer.py",
		"/home/jon/Documents/CRAI/DIRCN/dircn/models/dircn/resxunet.py",
		"/home/jon/Documents/CRAI/DIRCN/dircn/masks/__init__.py",
		"/home/jon/Documents/CRAI/DIRCN/dircn/models/losses/__init__.py",
		"/home/jon/Documents/CRAI/DIRCN/dircn/models/dircn/bottleneck.py",
		"/home/jon/Documents/CRAI/DIRCN/dircn/models/dircn/basicblock.py",
		"/home/jon/Documents/CRAI/DIRCN/dircn/preprocessing/complex_numpy_to_tensor.py",
		"/home/jon/Documents/CRAI/DIRCN/dircn/preprocessing/normalize_kspace.py",
		"/home/jon/Documents/CRAI/DIRCN/dircn/preprocessing/normalize.py",
		"/home/jon/Documents/CRAI/DIRCN/dircn/trainer/__init__.py",
		"/home/jon/Documents/CRAI/DIRCN/dircn/models/__init__.py",
		"/home/jon/Documents/CRAI/DIRCN/dircn/base/__init__.py",
		"/home/jon/Documents/CRAI/DIRCN/dircn/config/__init__.py",
		"/home/jon/Documents/CRAI/DIRCN/dircn/dataset/__init__.py",
		"/home/jon/Documents/CRAI/DIRCN/dircn/masks/kspace_subsampling_mask.py",
		"/home/jon/Documents/CRAI/DIRCN/dircn/models/reconstruction/VarNet/varnet_mod.py",
		"/home/jon/Documents/CRAI/DIRCN/dircn/models/reconstruction/ResXUNet/resxunet.py",
		"/home/jon/Documents/CRAI/DIRCN/dircn/models/dircn.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/ResXUNet/resxunet.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/DIRCN_V2/multiscale_dircn.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/ResXUNet/resxunetv2.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/UNet/RELU/unet_blocks.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/base/base_trainer.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/RDB_UNet/rdb_unet.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/RDB_UNet/complex_rdb_unet.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/ResXUNet/basicblock.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/trainer/trainer.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/preprocessing/complex_numpy_to_tensor.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/reconstruction/deep_reconstruction.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/skull_stripping/skull_strip.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/VarNet/original/unet.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/preprocessing/image_to_kspace.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/VarNet/varnet_mod.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/metrics/metrics.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/blocks/rdb.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/ResXUNet/comp_resxunet.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/masks/kspace_subsampling_mask.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/elastography/elast_net.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/metrics/__init__.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/fastmri/math.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/blocks/complex_rdb.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/blocks/squeeze_excitation.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/VarNet/cascade_denseunet.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/blocks/complex_conv.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/elastography/complex_elast_net.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/VarNet/complex_cascadenet.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/RDB_UNet/complex_deep_rdb_unet.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/RDB_UNet/deep_rdb_unet.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/dataset/phase_loader.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/dataset/mixup.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/dataset/datasetloader.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/VarNet/coil_cascade.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/VarNet/original/modified_varnet.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/VarNet/original/modified_dense_varnet.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/preprocessing/apply_mask.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/preprocessing/accm/accm.py",
		"/home/jon/Documents/CRAI/phase/MRE_preprocessing_pipeline.m",
		"/home/jon/Documents/CRAI/phase/accm.m",
		"/home/jon/Documents/CRAI/phase/ge_to_kspace.m",
		"/home/jon/Documents/CRAI/fMRI/fMRI/trainer/phase_trainer.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/HRNet/config.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/HRNet/hrnet.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/elastography/HRelast_net.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/blocks/__init__.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/VarNet/resxunet_varnet_ik.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/VarNet/equalize_block.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/elastography/varnet.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/elastography/ffts.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/dataset/datasetcontainer.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/dataset/datasetentry.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/blocks/bottleneck.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/efficientnet/config.py",
		"/home/jon/login.sh",
		"/home/jon/Documents/CRAI/fMRI/fMRI/preprocessing/kspace_to_image.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/preprocessing/normalize_kspace.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/preprocessing/rss.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/losses/SSIMLoss.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/preprocessing/normalize.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/preprocessing/accm/dft.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/ElastNet/__init__.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/PhaseVarNet/ffts.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/PhaseVarNet/elast_net.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/__init__.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/preprocessing/accm/dft2.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/fastmri/fftc.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/fastmri/coil_combine.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/VarNet/resxunet_varnet.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/PhaseVarNet/varnet.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/VarNet/resxunet_varnet2.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/VarNet/test.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/config/config_reader.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/ResXUNet/bottleneck.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/preprocessing/crop_image.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/VarNet/test_networks/skip_sense_varnet.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/__init__.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/VarNet/original/varnet_fftc.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/VarNet/varnet.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/VarNet/skip_varnet.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI.sublime-project",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/VarNet/original/original_varnet.py",
		"/home/jon/.bashrc",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/blocks/swish.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/VarNet/resxunet_bottle_varnet.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/ResXUNet/resxunet_bottle.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/preprocessing/downsample_fov.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/efficientnet/efficientnet.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/VarNet/skip_varnet2.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/ResUNet/repeated_bifpn_resunet.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/VarNet/han_varnet.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/UNet/RELU/relu_unet.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/ResUNet/res_unet.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/HAN/han.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/preprocessing/z_normalization.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/HAN/common.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/blocks/basicblock.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/VarNet/skip_varnet_han.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/HAN/__init__.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/VarNet/varnet_fftc.py",
		"/home/jon/Documents/CRAI/fMRI/fMRI/models/reconstruction/VarNet/skip_sense_varnet.py"
	],
	"find":
	{
		"height": 41.0
	},
	"find_in_files":
	{
		"height": 120.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"norm=",
			"use_maxouts",
			"ComplexConv2d",
			"entry",
			"[mask_4, mask_8]",
			"fMRI",
			": Sequence",
			"__call__",
			"__call",
			"maxouts",
			"use_maxouts",
			"maxouts",
			"use_maxouts",
			"maxouts",
			"internal_dense",
			"make_internal_dense_layers",
			"maxouts",
			"self.internal_dense_layers",
			"internal_dense_layers",
			"swish",
			"norm=",
			"norm",
			"norm=",
			"_norm",
			"cp"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "train.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4183,
						"regions":
						{
						},
						"selection":
						[
							[
								605,
								618
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										645,
										646
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										503,
										504
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"git_gutter_is_enabled": true,
							"show_definitions": false,
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "dircn/preprocessing/__init__.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 379,
						"regions":
						{
						},
						"selection":
						[
							[
								379,
								379
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"git_gutter_is_enabled": true,
							"show_definitions": false,
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "dircn/models/dircn/dircn.py",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13463,
						"regions":
						{
						},
						"selection":
						[
							[
								5698,
								5698
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"git_gutter_is_enabled": true,
							"show_definitions": false,
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 2987.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 29.0
	},
	"input":
	{
		"height": 46.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "dircn.sublime-project",
	"replace":
	{
		"height": 54.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"fMRI/dataset/datasetloader.py"
			],
			[
				"git",
				".gitignore"
			],
			[
				"datase",
				"evil/dataset_source_provider.py"
			],
			[
				"str",
				"evil/struct/struct_base.py"
			],
			[
				"fixtdete",
				"test/fixtures/detection.py"
			],
			[
				"annot",
				"evil/annotation_entry.py"
			],
			[
				"test_ann",
				"test/test_annotation_container.py"
			],
			[
				"video_cont",
				"evil/container_generators/video_container.py"
			],
			[
				"dataset",
				"evil/dataset_source_provider.py"
			],
			[
				"raise",
				"evil/datastructures/annotation_source.py"
			],
			[
				"json",
				"evil/json_parser.py"
			],
			[
				"down",
				"tutorial/video_download.py"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Documents/CRAI/fMRI-traning/fMRI-training.sublime-project"
			],
			[
				"p",
				"~/Documents/CRAI/babyjesus/ml_pipeline.sublime-project"
			],
			[
				"entr",
				"~/Documents/Epigram/bbox/bbox.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"last_filter": "mer",
		"selected_items":
		[
			[
				"mer",
				"merge"
			]
		],
		"width": 592.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 359.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
